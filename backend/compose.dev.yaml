services:
  web:
    image: nginx:latest # Using the default Nginx image with custom configuration.
    container_name: swapi-nginx
    volumes:
      # Mount the application code for live updates
      - ./:/var/www
      # Mount the Nginx configuration file
      - ./docker/development/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      # Map port 80 inside the container to the port specified by 'NGINX_PORT' on the host machine
      - "80:80"
    environment:
      - NGINX_HOST=localhost
    networks:
      - laravel-development
    restart: on-failure
    depends_on:
      php-fpm:
        condition: service_healthy  # Wait for php-fpm health check

  php-fpm:
    # For the php-fpm service, we will create a custom image to install the necessary PHP extensions and setup proper permissions.
    container_name: swapi-php-fpm
    build:
      context: .
      dockerfile: ./docker/common/php-fpm/Dockerfile
      target: development
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
        XDEBUG_ENABLED: ${XDEBUG_ENABLED:-true}
        XDEBUG_MODE: develop,coverage,debug,profile
        XDEBUG_HOST: ${XDEBUG_HOST:-host.docker.internal}
        XDEBUG_IDE_KEY: ${XDEBUG_IDE_KEY:-DOCKER}
        XDEBUG_LOG: /dev/stdout
        XDEBUG_LOG_LEVEL: 0
    env_file:
      # Load the environment variables from the Laravel application
      - .env
    user: "${UID:-1000}:${GID:-1000}"
    volumes:
      # Mount the application code for live updates
      - ./:/var/www
      - /var/www/vendor
    healthcheck:
      test: ["CMD-SHELL", "php-fpm-healthcheck || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - laravel-development
    depends_on:
      postgres:
        condition: service_started  # Wait for postgres to start

  workspace:
   # For the workspace service, we will also create a custom image to install and setup all the necessary stuff.
    container_name: swapi-workspace
    build:
      context: .
      dockerfile: ./docker/development/workspace/Dockerfile
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
        XDEBUG_ENABLED: ${XDEBUG_ENABLED:-true}
        XDEBUG_MODE: develop,coverage,debug,profile
        XDEBUG_HOST: ${XDEBUG_HOST:-host.docker.internal}
        XDEBUG_IDE_KEY: ${XDEBUG_IDE_KEY:-DOCKER}
        XDEBUG_LOG: /dev/stdout
        XDEBUG_LOG_LEVEL: 0
    tty: true  # Enables an interactive terminal
    stdin_open: true  # Keeps standard input open for 'docker exec'
    env_file:
      - .env
    volumes:
      - ./:/var/www
    networks:
      - laravel-development

  postgres:
    image: postgres:16
    container_name: swapi-postgres
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      - POSTGRES_DB=app
      - POSTGRES_USER=laravel
      - POSTGRES_PASSWORD=secret
    volumes:
      - postgres-data-development:/var/lib/postgresql/data
    networks:
      - laravel-development

  redis:
    image: redis:alpine
    container_name: swapi-redis
    networks:
      - laravel-development

    # Queue Worker Service
  laravel-queue-worker:
    container_name: swapi-queue-worker
    build:
      context: .
      dockerfile: ./docker/common/php-fpm/Dockerfile
    tty: true
    environment:
      SERVICE_NAME: laravel-queue-worker
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www
    networks:
      - laravel-development
    ports:
      - 9002:9002
    command: php artisan queue:work --queue=default --sleep=3 --tries=3 --max-time=3600
    restart: always 
    depends_on:
        php-fpm:
          condition: service_started  # Wait for php-fpm to start
    
  # Scheduler Service
  laravel-scheduler-worker:
    container_name: swapi-scheduler-worker
    build:
      context: .
      dockerfile: ./docker/common/php-fpm/Dockerfile
    tty: true
    environment:
      SERVICE_NAME: laravel-scheduler-worker
      SERVICE_TAGS: dev
    working_dir: /var/www
    ports:
      - 9001:9001
    volumes:
      - ./:/var/www
    networks:
      - laravel-development
    command: php artisan schedule:work
    restart: always 
    depends_on:
        php-fpm:
          condition: service_started  # Wait for php-fpm to start
  frontend:
    build:
      context: ../frontend
      dockerfile: ../frontend/Dockerfile
    container_name: swapi-frontend
    ports:
      - "3000:3000"
    volumes:
      -  ./:/var/www
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - laravel-development
    depends_on:
      php-fpm:
        condition: service_healthy  # Wait for php-fpm health check

networks:
  laravel-development:

volumes:
  postgres-data-development: